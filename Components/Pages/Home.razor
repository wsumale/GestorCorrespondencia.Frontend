@page "/principal/home"

@using GestorCorrespondencia.Frontend.Shared.Components
<SessionValidator title="Gestor de Correspondencia" />

@inject ILogger<Home> _logger
@using GestorCorrespondencia.Frontend.Services.Dialogs
@inject CustomDialogService CustomDialogService
@inject DialogService DialogService

@using GestorCorrespondencia.Frontend.Services.Security
@inject AccessControlService ACService

@using GestorCorrespondencia.Frontend.Services.Http
@inject ApiPostService ApiPostService

<RadzenButton Click="@(()=>TestRefresh())">Click me</RadzenButton>

@code{
    async Task TestRefresh(){
        try{
            var response = await ApiPostService.PostAsync<object>("aut", null, 1, false);
            if (response.IsSuccessStatusCode)
            {
                _logger.LogWarning("success");
            }
            else
            {
                // await CustomDialogService.OpenViewErrors(response);
            }
        } 
        catch (Exception e){
            await DialogService.Alert(e.Message, "Error interno", new AlertOptions() { OkButtonText = "Aceptar" });
        }
    }
}

<ClaimsViewer />