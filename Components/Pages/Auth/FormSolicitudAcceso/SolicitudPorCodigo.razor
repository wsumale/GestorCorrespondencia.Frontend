@layout Layout.LoginLayout

@using GestorCorrespondencia.Frontend.Components.Pages.Auth.FormSolicitudAcceso.FormSolicitudPorCodigo
@using GestorCorrespondencia.Frontend.Model.Auth.SolicitudAcceso
@using GestorCorrespondencia.Frontend.Model.Responses
@using GestorCorrespondencia.Frontend.Services.Http

@inject HttpClient Http
@inject ApiService Api

@switch(formulario) {
    case 0:
        <RadzenTemplateForm Data="form" Submit="@OnSubmitValidarCodigo" TItem="FormularioValidarCodigo" class="form-solicitud">
            <RadzenRow>
                <RadzenFormField Text="Código" Variant="Variant.Filled" class="w-100 rz-text-align-left">
                    <RadzenNumeric @bind-Value="form.employeeCode" Name="Codigo" class="form-input" autocomplete="off" />
                </RadzenFormField>
                <RadzenRequiredValidator Text="Campo requerido" Component="Codigo" Style="margin-bottom:10px" />
            </RadzenRow>

            <RadzenRow class="rz-display-flex rz-justify-content-center">
                <RadzenButton Text="Continuar" ButtonStyle="ButtonStyle.Primary" ButtonType="ButtonType.Submit" class="solicitud-submit" />
            </RadzenRow>
        </RadzenTemplateForm>
        break;
    case 1:
        <SolicitarAccesoExistente />
        break;
    case 2:
        <SolicitarAccesoNuevo />
        break;
}

@using System.Text.Json
@using Microsoft.Extensions.Logging
@inject ILogger<SolicitudPorCodigo> _logger

@code {
    private int formulario = 0; //0=Validar Codigo, 1=Usar Credenciales Existentes, 2=Crear Usuario

    FormularioValidarCodigo form = new FormularioValidarCodigo();

    private string? error;

    private int? code;
    private string? title;
    private string? msg;

    private async Task OnSubmitValidarCodigo()
    {
        var (data, err) = await Api.GetAsync<ApiResponse<object>, object, ApiResponseNotAcceptable>($"auth/validar-workbeat?employeeCode={form.employeeCode}", 2, true);

        if (err != null)
        {
            if (data is ApiResponseNotAcceptable errorResponse)
            {
                title = errorResponse.Title;
                msg = errorResponse.Detail;
                code = errorResponse.Status;
            }
            else if (data != null && data.GetType().GetProperty("StatusCode") != null)
            {
                code = Convert.ToInt32(data.GetType().GetProperty("StatusCode")?.GetValue(data)?.ToString());
                title = "Error";
                msg = $"Error del servidor Código ({code})";
            }

            cambiarFormulario(code);
            return;
        }

        // Si no hubo error
        if (data != null)
        {
            code = Convert.ToInt32(data.GetType().GetProperty("StatusCode")?.GetValue(data)?.ToString());
            msg = $"Respuesta OK Código {code}";
        }

        cambiarFormulario(code);
    }


    void cambiarFormulario(int? i)
    {
        if(i == 200){
            formulario = 1;
        } else if(i == 406) {
            formulario = 2;
        } else {
            formulario = 0;
        }
    }
}