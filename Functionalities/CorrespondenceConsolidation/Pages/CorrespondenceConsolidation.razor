@page "/correspondencia/consolidar_paquetes_recibidos"

@using GestorCorrespondencia.Frontend.Functionalities.Tracking.Model
@using GestorCorrespondencia.Frontend.Shared.Components.CreateConsolidation.Model
@using GestorCorrespondencia.Frontend.Services.Dialogs
@inject CustomDialogService CustomDialogService

<SessionValidator title="Consolidar paquetes recibidos" path="/correspondencia/consolidar_paquetes_recibidos">
    <Loader Loading="@loading" />
    <div class="main-container">

        <RadzenText Text="Consolidar paquetes" TextStyle="TextStyle.H3" class="form-title" />

        <RadzenRow class="rz-mb-3">
            <RadzenColumn Size="6" SizeXS="12" SizeSM="12" SizeMD="6" SizeLG="6" SizeXL="3" SizeXX="3">
                <RadzenDropDown @key="dropdownKey" 
                                Data="@locations" @bind-Value="selectedLocationId" Change="GetPackagesAsync"
                                ValueProperty="LocationId" TextProperty="LocationName" Placeholder="Seleccione ubicación destino"
                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.Contains" AllowFiltering="true" />

                <RadzenButton ButtonStyle="ButtonStyle.Danger" Click="ClearSelectedLocation"
                              Icon="filter_alt_off" Size="ButtonSize.Medium" />
            </RadzenColumn>
        </RadzenRow>

        <RadzenDataGrid TItem="ConsolidatedDetail" @ref="grid" Data="@packagesDetail" AllowRowSelectOnRowClick="@allowRowSelectOnRowClick"
                        AllowFiltering="true" ApplyFilterText="Aplicar" ClearFilterText="Limpiar" EmptyText="No hay paquetes pendientes de consolidar"
                        FilterMode="FilterMode.CheckBoxList" FilterPopupRenderMode="PopupRenderMode.OnDemand"
                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="10"
                        AllowSorting="true" ColumnWidth="200px"
                        SelectionMode="DataGridSelectionMode.Multiple" @bind-Value=@selectedPackages>
            <Columns>
                <RadzenDataGridColumn Filterable="false" Sortable="false" Width="42px">
                    <HeaderTemplate>
                        <RadzenCheckBox TabIndex="-1" TriState="false" TValue="bool?"
                                        InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "Select all items" }})"
                                        Value="@(selectedPackages == null ||
                                             selectedPackages?.Any() != true ? false : !packagesDetail.All(i => selectedPackages.Contains(i)) ?
                                             null : packagesDetail.Any(i => selectedPackages.Contains(i)))"
                                        Change="@(args => selectedPackages = args == true ? grid.View.ToList() : null)"
                                        Disabled="false" />
                    </HeaderTemplate>
                    <Template Context="data">
                        <RadzenCheckBox TabIndex="-1" TriState="false" Value="@(selectedPackages != null && selectedPackages.Contains(data))"
                                        InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "Select item" }})"
                                        TValue="bool" Change=@(args => { if (!allowRowSelectOnRowClick) { grid.SelectRow(data); } }) />
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn Property="PackageId" Title="Rastreo" Width="115px">
                    <Template Context="Package">
                        <span class="clickable-text" @onclick:stopPropagation="true" @onclick="() => CustomDialogService.OpenViewPackage(Package.PackageId)">
                            @Package.PackageId
                        </span>
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn Title="Fecha" Width="120px">
                    <Template Context="package">
                        @package.Created.ToLocalTime().ToString("dd/MM/yyyy")
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn Property="Sender" Title="Remitente" />
                <RadzenDataGridColumn Property="SenderLocation" Title="Origen" />
                <RadzenDataGridColumn Property="Addressee" Title="Destinatario" />
                <RadzenDataGridColumn title="Ubicación Destino">
                    <Template>
                        @selectedLocation
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn Property="RecipientLocation" Title="Destino" />
                <RadzenDataGridColumn Filterable="false" Sortable="false" Width="61px">
                    <Template Context="Detail">
                        <RadzenButton Click="@(() => CustomDialogService.OpenViewPackage(Detail.PackageId))" @onclick:stopPropagation="true" Icon="list" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Medium" />
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>

        <RadzenRow class="rz-mt-3 rz-display rz-justify-content-right rz-justify-content-end">
            <RadzenButton Text="Enviar Consolidado" Click="OpenPreviewConsolidation" Disabled="@(selectedPackages == null || !selectedPackages.Any())" />
        </RadzenRow>
    </div>
</SessionValidator>
