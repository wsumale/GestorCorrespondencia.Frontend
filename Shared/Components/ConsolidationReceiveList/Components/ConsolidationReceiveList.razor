	@using GestorCorrespondencia.Frontend.Shared.Components.CreatePackageIncident.Components
	@using GestorCorrespondencia.Frontend.Shared.Components.ConsolidationReceiveList.Model

	<Loader Loading="@loading" />

	<RadzenRow>
		<RadzenColumn>
			<p>
				<strong>Origen:</strong> @consolidated!.SenderLocation <br />
				<strong>Remitente:</strong> @consolidated.CreatedBy
			</p>
		</RadzenColumn>
		<RadzenColumn>
			<p>
				<strong>Fecha:</strong> @consolidated!.CreatedAt
			</p>
		</RadzenColumn>
	</RadzenRow>

	<RadzenDataGrid Data="@consolidated!.Detail" TItem="PendingConsolidationDetail"
					AllowFiltering="true" ApplyFilterText="Aplicar" ClearFilterText="Limpiar" EmptyText="No hay paquetes en este consolidado"
					FilterMode="FilterMode.CheckBoxList" FilterPopupRenderMode="PopupRenderMode.OnDemand"
					FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="10"
					AllowSorting="true" ColumnWidth="200px">
		<Columns>
			<RadzenDataGridColumn Property="PackageId" Title="Rastreo" Width="125px" />
			<RadzenDataGridColumn Property="SenderLocation" Title="Origen" />
			<RadzenDataGridColumn Property="Sender" Title="Remitente" />
			<RadzenDataGridColumn Property="DestinationLocation" Title="Destino" />
			<RadzenDataGridColumn Property="Addressee" Title="Destinatario" />
			<RadzenDataGridColumn Property="CreatedAt" Title="Fecha de Envío" />
			<RadzenDataGridColumn Filterable="false" Sortable="false" TextAlign="TextAlign.Right" Width="250px">
				<Template Context="Detail">
					<RadzenButton Click="@(() => CustomDialogService.OpenViewPackageAsync(Detail.PackageId))" Icon="list" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Medium" class="rz-me-2" />
					@if(ConsolidatedType == 1){
						<RadzenButton Click="@(() => CreateIncidentDialogAsync(Detail.PackageId, Detail.ConsolidatedDetailId))" hidden="@(Detail.StateId != 5)" Icon="add_alert" ButtonStyle="ButtonStyle.Danger" Size="ButtonSize.Medium" />
						<RadzenBadge Shade="Shade.Lighter" BadgeStyle="BadgeStyle.Warning" Text="@(Detail.State)" hidden="@(Detail.StateId == 5)" />
					} 
					else if (ConsolidatedType == 2){
						<RadzenButton Click="@(() => CreateIncidentDialogAsync(Detail.PackageId, Detail.ConsolidatedDetailId))" hidden="@(Detail.StateId != 8)" Icon="add_alert" ButtonStyle="ButtonStyle.Danger" Size="ButtonSize.Medium" />
						<RadzenBadge Shade="Shade.Lighter" BadgeStyle="BadgeStyle.Warning" Text="@(Detail.State)" hidden="@(Detail.StateId == 8)" />
					}
				</Template>
			</RadzenDataGridColumn>
		</Columns>
	</RadzenDataGrid>

	<RadzenRow class="rz-mt-3 gap-3 rz-justify-content-right">
		<RadzenButton Text="Cancelar" ButtonStyle="ButtonStyle.Danger" Click="Cancel" />
		<RadzenButton Text="Recibir consolidado" BusyText="Recibiendo Consolidado" IsBusy="@busy" ButtonStyle="ButtonStyle.Primary" Click="ReceiveConsolidationAsync" />
	</RadzenRow>